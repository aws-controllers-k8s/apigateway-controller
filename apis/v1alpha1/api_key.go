// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ApiKeySpec defines the desired state of ApiKey.
//
// A resource that can be distributed to callers for executing Method resources
// that require an API key. API keys can be mapped to any Stage on any RestApi,
// which indicates that the callers with the API key can make requests to that
// stage.
type APIKeySpec struct {

	// An Amazon Web Services Marketplace customer identifier, when integrating
	// with the Amazon Web Services SaaS Marketplace.
	CustomerID *string `json:"customerID,omitempty"`
	// The description of the ApiKey.
	Description *string `json:"description,omitempty"`
	// Specifies whether the ApiKey can be used by callers.
	Enabled *bool `json:"enabled,omitempty"`
	// Specifies whether (true) or not (false) the key identifier is distinct from
	// the created API key value. This parameter is deprecated and should not be
	// used.
	GenerateDistinctID *bool `json:"generateDistinctID,omitempty"`
	// The name of the ApiKey.
	// +kubebuilder:validation:Required
	Name *string `json:"name"`
	// DEPRECATED FOR USAGE PLANS - Specifies stages associated with the API key.
	StageKeys []*StageKey `json:"stageKeys,omitempty"`
	// The key-value map of strings. The valid character set is [a-zA-Z+-=._:/].
	// The tag key can be up to 128 characters and must not start with aws:. The
	// tag value can be up to 256 characters.
	Tags map[string]*string `json:"tags,omitempty"`
	// Specifies a value of the API key.
	Value *string `json:"value,omitempty"`
}

// APIKeyStatus defines the observed state of APIKey
type APIKeyStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRs managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// The timestamp when the API Key was created.
	// +kubebuilder:validation:Optional
	CreatedDate *metav1.Time `json:"createdDate,omitempty"`
	// The identifier of the API Key.
	// +kubebuilder:validation:Optional
	ID *string `json:"id,omitempty"`
	// The timestamp when the API Key was last updated.
	// +kubebuilder:validation:Optional
	LastUpdatedDate *metav1.Time `json:"lastUpdatedDate,omitempty"`
}

// APIKey is the Schema for the APIKeys API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type APIKey struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              APIKeySpec   `json:"spec,omitempty"`
	Status            APIKeyStatus `json:"status,omitempty"`
}

// APIKeyList contains a list of APIKey
// +kubebuilder:object:root=true
type APIKeyList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []APIKey `json:"items"`
}

func init() {
	SchemeBuilder.Register(&APIKey{}, &APIKeyList{})
}
